# CYBERNETHUNTER ALPHA
# Configuration adapted from HELK (Author: Nate Guagenti (@neu5ron), Roberto Rodriguez (@Cyb3rWard0g))
# License: GPL-3.0

filter {
  ## Use the following to get rid of the prepended fields that (elastic) Winlogbeat adds
  ## Also use it to tag CyberHunter DFIR Logs so that they can get parsed by downstream parsers

  # CyberHunter Logs
  if [log_src_pipeline] == "cybernethunter" {

    mutate {
        add_field => {
          "[@metadata][dfir_collection]" => "yes"
          "z_logstash_pipeline" => "cybernethunter_dfir_tags"
          "[@metadata][cybernethunter_parsed]" => "yes"
        }
        tag_on_failure =>  "cyh_could_not_add_cybernethunter_dfir_tags_1010"
    }

    if [EventID] {
      mutate {
        add_field => {
          "event_id" => "%{EventID}"
          "[@metadata][cybernethunter_parsed]" => "yes"
        }
        remove_field => [ "[EventID]" ]
        tag_on_failure =>  "cyh_could_not_add_eventid_1010"
      }
    }
  }

  # Winlogbeat 6.x
  if [type] == "wineventlog" and [beat] {
    ruby {
      code => "
        eventdata = event.get('event_data')
        # Sometimes does not exist, so check that first -- then move the nests
        if !eventdata.nil?
          eventdata.each {|k, v|
            if eventdata.to_s != '(NULL)'
              event.set(k, v)
            end
          }
        end
        # Finally remove the nest completely
        event.remove('event_data')
      "
      tag_on_exception =>  "ruby_exception_winlogbeat_6_cleanup"
      add_field => {
        "beat_hostname" => "%{[beat][hostname]}"
        "beat_version" => "%{[beat][version]}"
        "beat_name" => "%{[beat][name]}"
        "z_logstash_pipeline" => "winlogbeat_6-field_nest_cleanup"
        "[@metadata][cybernethunter_parsed]" => "yes"
      }
      remove_field => [ "[beat]" ]
    }
  }

  # Winlogbeat 7.x
  else if [agent][type] == "winlogbeat" {
    ruby {
      code => '
        # event_data nested field
        eventdata = event.get("[winlog][event_data]")
        # Sometimes does not exist, so check that first -- then move the nests
        if !eventdata.nil?
          eventdata.each {|k, v|
            if eventdata.to_s != "(NULL)"
              event.set(k, v)
            end
          }
        end
        # Finally remove the nest completely
        event.remove("[winlog][event_data]")

        # user nested field
        userdata = event.get("[winlog][user]")
        userdata_new = Hash.new
        # Sometimes does not exist, so check that first -- then move the nests
        if !userdata.nil?
          userdata.each {|k, v|
            if userdata.to_s != "(NULL)"
              userdata_new.store(k,v)
            end
          }
          # Set the new fields
          event.set("[user]", userdata_new)
        end
        # Finally remove the nest completely
        event.remove("[winlog][user]")
      '
      tag_on_exception =>  "ruby_exception_winlogbeat_7-cleanup"
      add_field => {
        "z_logstash_pipeline" => "winlogbeat_7-field_nest_cleanup"
        "[@metadata][cybernethunter_parsed]" => "yes"
      }
    }
    # Also, for continuity copy the new fields for Winlogbeat 7 back to the original field names (Winlogbeat 6.x and before). However, lets keep them - for future or anyone else doing something different.
    mutate {
      copy => {
        "[agent][hostname]" => "beat_hostname"
        "[agent][name]" => "beat_name"
        "[agent][version]" => "beat_version"
        "[event][timezone]" => "beat_timezone"
        "[log][level]" => "level"
        "[error][message]" => "message_error"
        "[event][original]" => "xml"
        "[process][executable]" => "[process][exe]"
        "[winlog][activity_id]" => "activity_id"
        "[winlog][api]" => "type"
        "[winlog][channel]" => "log_name"
        "[winlog][computer_name]" => "computer_name"
        "[winlog][event_id]" => "event_id"
        "[winlog][keywords]" => "keywords"
        "[winlog][provider_guid]" => "provider_guid"
        "[winlog][provider_name]" => "source_name"
        "[winlog][process][pid]" => "process_id"
        "[winlog][process][thread][id]" => "thread_id"
        "[winlog][opcode]" => "opcode"
        "[winlog][record_id]" => "record_number"
        "[winlog][task]" => "task"
        "[winlog][version]" => "version"
      }
      #remove_field => [ "[winlog]" ]
      add_field => { "z_logstash_pipeline" => "winlogbeat_7-copy_to_originals" }
    }
  }
}