# CYBERNETHUNTER ALPHA
# Configuration adapted from HELK (Author: Nate Guagenti (@neu5ron), Roberto Rodriguez (@Cyb3rWard0g))
# License: GPL-3.0
# Description: These fingerprints will help get rid of duplicate log sources...
# especially when using Windows Event Forwarding

filter {

  ## Perform hashing on winlogbeat differently than other logs
  # Winlogbeat 6.x
  if [type] == "wineventlog" and [beat] {
    fingerprint {
      source => [
          "message",
          "computer_name",
          "@timestamp",
          "log_name",
          "event_id"
     ]
      concatenate_sources => true
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-0099-001" }
    }
  }
  # Winlogbeat 7.x
  if [winlog][api] == "wineventlog" and [agent][type] == "winlogbeat" {
    fingerprint {
      source => [
          "message",
          "[winlog][computer_name]",
          "@timestamp",
          "[winlog][channel]",
          "[winlog][event_id]"
     ]
      concatenate_sources => true
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-winlogbeats7" }
    }
  }

  # CyberHunter DFIR Logs
  if [log_src_pipeline] == "cybernethunter" {
    fingerprint {
      source => [
          "log_name",
          "@timestamp",
          "log_hostname"
     ]
      concatenate_sources => true
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-cybernethunter" }
    }
  }

  # Perform hashing on NXLog differently than other logs
  else if [type] == "nxlog-winevent" {
    fingerprint {
      source => [
          "message",
          "Hostname",
          "EventTime",
          "Channel",
          "EventID"
      ]
      concatenate_sources => true
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-0099-002" }
    }
  }

  else if [message] {
    fingerprint {
      source => "message"
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-0099-003" }
    }
  }

  else if [Message] {
    fingerprint {
      source => "Message"
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-0099-004" }
    }
  }

  else if [z_original_message] {
    fingerprint {
      source => "z_original_message"
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-0099-005" }
    }
  }

  ## Scenario of no message field for, create custom one concatenating some values to guarantee unique fingerprint
  #TONOTE: can use this value in z_logstash_pipeline to see if this event is hit
  # 6.x beats
  else if [beat] {
    # Use this custom for this event
    mutate { add_field => { "meta_log_tags" => "warning missing message field" } }
    fingerprint {
      concatenate_all_fields => true
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-0099-006" }
    }
  }
  # 7.x beats
  else if [agent] {
    # Use this custom for this event
    mutate { add_field => { "meta_log_tags" => "warning missing message field" } }
    fingerprint {
      concatenate_all_fields => true
      target => "[@metadata][log_hash]"
      method => "SHA1"
      add_field => { "z_logstash_pipeline" => "fingerprint-beats7-missing-message-field" }
    }
  }

}
